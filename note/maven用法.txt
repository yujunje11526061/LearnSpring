maven是项目管理工具，但更多地是管理各个模块，各个模块组成项目。由artifactId来分类。

目录结构：main和test应平行构建
POM：项目对象模型，用于配置项目。

# maven各种功能主要由对应插件支持。如核心插件，打包插件等。
以下命令按照顺序对应一个项目完整的生命周期，运行生命周期后面的命令会自动先经历生命周期前面的阶段。具体生命周期可参考IDEA Maven Project中的lifecycle周期
mvn         -v 查看maven版本
	clean 清除以前残留的target
	compile 编译
	test 测试
	package 项目打包，生成target文件夹。可以在pom.xml中指定插件来来生成对应的任务包，如war插件生成war包。war包可提交给tomcat让其运行。
	install 打包和部署项目到本地资源仓库，即在本地仓库添加添加该项目的jat包。
	site 为项目生成信息文档站点
	tomcat:deploy 以WAR文件部署到Tomcat

创建目录的两种方式，java项目的源代码应该按照相同的目录组织。
mvn
	archetype:generate 按照提示进行选择
	archetype:generate -DgroupId=组织名，通常是公司网址反写+项目名
			-DartifactId=项目名+模块名
			-Dversion=版本号
			-Dpackage=代码所存在的包名